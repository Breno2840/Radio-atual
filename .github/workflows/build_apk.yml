name: Build Flutter Android Release

on:
  # Permite que você inicie o workflow manualmente na aba Actions do GitHub
  workflow_dispatch:

jobs:
  build:
    permissions:
      contents: write

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          
      - name: Install dependencies
        run: flutter pub get
        
      # --- INÍCIO DA CONFIGURAÇÃO DE SEGURANÇA DA CHAVE KEYSTORE ---
      
      # 1. Decodificar a chave secreta Base64 e criar o arquivo JKS
      - name: Decodificar Keystore e Salvar Arquivo
        run: |
          # O arquivo 'upload-keystore.jks' será criado em 'android/app/' para o Gradle encontrá-lo
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > android/app/upload-keystore.jks
          
      # 2. Configurar as senhas como variáveis de ambiente para o build
      - name: Configurar Variáveis de Senha
        run: |
          # O build.gradle usará essas variáveis (System.getenv) para assinar o release
          echo "KEY_PASS=${{ secrets.KEY_PASS }}" >> $GITHUB_ENV
          echo "KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> $GITHUB_ENV
          echo "STORE_PASS=${{ secrets.STORE_PASS }}" >> $GITHUB_ENV
          
      # --- FIM DA CONFIGURAÇÃO DE SEGURANÇA ---


      # Comando de Build de Release
      # Compilamos o App Bundle (AAB) que é o formato padrão do Google Play
      - name: Build Android App Bundle (AAB) - Release
        run: flutter build appbundle --release
        
      # Se você precisar de um APK de Release, use:
      # - name: Build Android APK - Release
      #   run: flutter build apk --release

      - name: Criar Release e Anexar AAB
        uses: softprops/action-gh-release@v1
        with:
          tag_name: release-v1.0.${{ github.run_number }} # Nome de tag mais profissional
          name: Versão de Produção v1.0 #${{ github.run_number }} (AAB)
          # O arquivo gerado é o app-release.aab na pasta outputs/bundle
          files: build/app/outputs/bundle/release/app-release.aab
